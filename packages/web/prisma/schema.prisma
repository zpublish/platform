datasource db {
  provider             = "postgresql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  relationMode = "foreignKeys"
}

generator client {
  provider        = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?    @unique
  email         String?    @unique
  pendingEmail  String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  invoices      Invoice[]
  bio                 String?
  socials             Json?    @map("socials")
  zcashaddress        String?
  viewingKey          String?  @db.Text
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Invoice {
  id         String   @id @default(cuid())
  // invoiceId  String   @unique
  userId     String
  // user User @relation(fields: [userId], references: [id])
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  currency   String
  amount     String
  walletId   String   @unique
}

